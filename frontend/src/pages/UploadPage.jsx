import React, { useState, useContext, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import axios from 'axios'
import { UserContext } from '../App'
import ImageUploader from '../components/ImageUploader'

const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'https://jk-lakshmi-api.expm.in'

const UploadPage = () => {
  const { user, updateUser, showEditForm, setShowEditForm } = useContext(UserContext)
  const navigate = useNavigate()
  const [uploading, setUploading] = useState(false)
  // Check if user already has complete info to skip the form
  const [formSubmitted, setFormSubmitted] = useState(
    user?.dealershipName && user?.sapCode && user?.mobileNumber
  )
  const [userInfo, setUserInfo] = useState({
    dealershipName: user?.dealershipName || '',
    sapCode: user?.sapCode || '',
    mobileNumber: user?.mobileNumber || ''
  })
  const [showTermsModal, setShowTermsModal] = useState(false)

  const handleUpload = async (formData) => {
    // Generate a temporary ID if user doesn't have one
    const currentUserId = user?.id || `temp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`

    try {
      setUploading(true)

      // Always add user info to form data when uploading
      const uploadUserInfo = {
        dealershipName: userInfo.dealershipName || user?.dealershipName || '',
        sapCode: userInfo.sapCode || user?.sapCode || '',
        mobileNumber: userInfo.mobileNumber || user?.mobileNumber || ''
      }

      // Add user ID and user info to form data
      formData.append('userId', currentUserId)
      formData.append('userInfo', JSON.stringify(uploadUserInfo))

      const response = await axios.post(`${API_BASE_URL}/api/upload`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      })

      if (response.data.success) {
        // Update user with upload info
        const uploadData = response.data.data
        updateUser({
          ...userInfo,
          id: uploadData.userId || user.id, // Use database user ID if available, keep original ID if null
          uploads: [...(user.uploads || []), uploadData]
        })

        // Navigate to preview page
        navigate(`/preview/${uploadData.uploadId}`)
      } else {
        throw new Error(response.data.message || 'Upload failed')
      }
    } catch (error) {
      console.error('Upload error:', error)
      const errorMessage = error.response?.data?.message || error.message || 'Upload failed'
      alert(`Upload failed: ${errorMessage}`)
    } finally {
      setUploading(false)
    }
  }

  const handleUserInfoSubmit = (e) => {
    e.preventDefault()
    
    // Validate SAP Code
    if (userInfo.sapCode.length !== 10 || !/^\d{10}$/.test(userInfo.sapCode)) {
      alert('SAP CODE must be exactly 10 digits')
      return
    }
    
    // Validate Mobile Number (10 digits)
    if (userInfo.mobileNumber.length !== 10 || !/^\d{10}$/.test(userInfo.mobileNumber)) {
      alert('Mobile Number must be exactly 10 digits')
      return
    }
    
    // Validate Dealership Name
    if (!userInfo.dealershipName.trim()) {
      alert('Dealership Name is required')
      return
    }
    
    updateUser(userInfo)
    setFormSubmitted(true)
  }

  const handleUserInfoChange = (field, value) => {
    setUserInfo(prev => ({
      ...prev,
      [field]: value
    }))
  }



  // Listen for edit trigger from header
  useEffect(() => {
    if (showEditForm) {
      setFormSubmitted(false)
      setShowEditForm(false) // Reset the trigger
    }
  }, [showEditForm, setShowEditForm])

  return (
    <div className="max-w-4xl mx-auto space-y-8">
      {/* Welcome Section */}
      <div className="text-center">
        <h1 className="text-xl font-bold text-gray-900 mb-4">
          JK Lakshmi SKY - DIGITAL BRANDING CONTEST 
        </h1>
        <p className="text-l text-gray-600 mb-6">
          ‡§Ö‡§¨ ‡§∏‡§ú‡§æ‡§á‡§è ‡§Ö‡§™‡§®‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§® ‚Äì ‡§á‡§∏ ‡§¶‡§ø‡§µ‡§æ‡§≤‡•Ä ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§™‡§∞ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ ‡§Æ‡•á‡§Ç! ‡§î‡§∞ ‡§™‡§æ‡§è‡§Ç ‡§á‡§®‡§æ‡§Æ!

        </p>
        
        {/* Features Grid */}
        {/* <div className="grid md:grid-cols-2 gap-6 mb-8">
          <div className="card p-6 text-center">
            <div className="text-4xl mb-3">ü§ñ</div>
            <h3 className="font-semibold text-gray-900 mb-2">AI-Powered Designs</h3>
            <p className="text-sm text-gray-600">
              Get 4 unique facade designs generated by advanced AI
            </p>
          </div>
          <div className="card p-6 text-center">
            <div className="text-4xl mb-3">üèÜ</div>
            <h3 className="font-semibold text-gray-900 mb-2">Contest Entry</h3>
            <p className="text-sm text-gray-600">
              Share your design and participate in rewards
            </p>
          </div>
        </div> */}
      </div>

      {/* User Form - Show directly if not submitted */}
      {!formSubmitted && (
        <div className="card p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">
            üìù Enter Your Details to Participate
          </h3>
          <p className="text-sm text-gray-600 mb-6">
            Please fill in your information to proceed with the contest
          </p>
          <form onSubmit={handleUserInfoSubmit} className="space-y-4">
            <div>
              <label className="form-label">
                Dealership Name *
              </label>
              <input
                type="text"
                value={userInfo.dealershipName}
                onChange={(e) => handleUserInfoChange('dealershipName', e.target.value)}
                className="form-input"
                placeholder="Enter your dealership name"
                required
              />
            </div>
            <div className="grid md:grid-cols-2 gap-4">
              <div>
                <label className="form-label">
                  SAP CODE *
                </label>
                <input
                  type="text"
                  value={userInfo.sapCode}
                  onChange={(e) => {
                    const value = e.target.value.replace(/\D/g, '').slice(0, 10)
                    handleUserInfoChange('sapCode', value)
                  }}
                  className="form-input"
                  placeholder="Enter 10-digit SAP code"
                  pattern="\d{10}"
                  maxLength="10"
                  required
                />
                <p className="text-xs text-gray-500 mt-1">
                  Must be exactly 10 digits
                </p>
              </div>
              <div>
                <label className="form-label">
                  Mobile Number *
                </label>
                <input
                  type="tel"
                  value={userInfo.mobileNumber}
                  onChange={(e) => {
                    const value = e.target.value.replace(/\D/g, '').slice(0, 10)
                    handleUserInfoChange('mobileNumber', value)
                  }}
                  className="form-input"
                  placeholder="9876543210"
                  pattern="\d{10}"
                  maxLength="10"
                  required
                />
                <p className="text-xs text-gray-500 mt-1">
                  Must be exactly 10 digits
                </p>
              </div>
            </div>
            
            <div className="flex justify-center">
              <button type="submit" className="btn-primary px-8 py-3">
                Submit & Continue to Upload
              </button>
            </div>
            
            {/* Terms and Conditions Link */}
            <div className="text-center text-sm text-gray-600">
              By submitting, you agree to our{' '}
              <button
                type="button"
                onClick={() => setShowTermsModal(true)}
                className="text-red-600 hover:text-red-800 underline font-medium"
              >
                Terms and Conditions
              </button>
            </div>
          </form>
        </div>
      )}

      {/* Image Uploader - Show only after form submission */}
      {formSubmitted && (
        <ImageUploader
          onUpload={handleUpload}
          loading={uploading}
          userId={user?.id}
        />
      )}

      {/* Recent Uploads - Hide this section */}
      {false && user?.uploads && user.uploads.length > 0 && (
        <div className="card p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">
            Your Recent Uploads
          </h3>
          <div className="grid md:grid-cols-3 gap-4">
            {user.uploads.slice(-3).map((upload) => (
              <div
                key={upload.uploadId}
                className="relative group cursor-pointer"
                onClick={() => navigate(`/preview/${upload.uploadId}`)}
              >
                <img
                  src={`${API_BASE_URL}${upload.filePath}`}
                  alt={upload.originalName}
                  className="w-full h-32 object-cover rounded-lg"
                />
                <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all rounded-lg flex items-center justify-center">
                  <span className="text-white opacity-0 group-hover:opacity-100 font-medium">
                    View Designs
                  </span>
                </div>
                <div className="absolute bottom-2 left-2 bg-white px-2 py-1 rounded text-xs">
                  {new Date(upload.uploadedAt).toLocaleDateString()}
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* How It Works */}
      {/* <div className="card p-4 sm:p-6 lg:p-8 bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 border-red-200">
        <div className="text-center mb-6">
          <h2 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
            How It Works
          </h2>
          <p className="text-gray-600 text-sm sm:text-base">
            Transform your shopfront in 3 simple steps
          </p>
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-6 sm:gap-8">
          <div className="text-center group">
            <div className="relative mb-4">
              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-full flex items-center justify-center text-xl sm:text-2xl font-bold mx-auto shadow-lg transform group-hover:scale-105 transition-transform">
                üì∏
              </div>
              <div className="absolute -top-2 -right-2 w-8 h-8 bg-orange-400 text-white rounded-full flex items-center justify-center text-sm font-bold">
                1
              </div>
            </div>
            <h3 className="font-bold text-gray-900 mb-2 text-lg sm:text-xl">Upload Photo</h3>
            <p className="text-sm sm:text-base text-gray-600 leading-relaxed">
              Take or upload a clear photo of your shopfront
            </p>
          </div>
          <div className="text-center group">
            <div className="relative mb-4">
              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-full flex items-center justify-center text-xl sm:text-2xl font-bold mx-auto shadow-lg transform group-hover:scale-105 transition-transform">
                ü§ñ
              </div>
              <div className="absolute -top-2 -right-2 w-8 h-8 bg-orange-400 text-white rounded-full flex items-center justify-center text-sm font-bold">
                2
              </div>
            </div>
            <h3 className="font-bold text-gray-900 mb-2 text-lg sm:text-xl">AI Generation</h3>
            <p className="text-sm sm:text-base text-gray-600 leading-relaxed">
              Our AI creates 4 unique facade designs for you
            </p>
          </div>
          <div className="text-center group">
            <div className="relative mb-4">
              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-full flex items-center justify-center text-xl sm:text-2xl font-bold mx-auto shadow-lg transform group-hover:scale-105 transition-transform">
                üéâ
              </div>
              <div className="absolute -top-2 -right-2 w-8 h-8 bg-orange-400 text-white rounded-full flex items-center justify-center text-sm font-bold">
                3
              </div>
            </div>
            <h3 className="font-bold text-gray-900 mb-2 text-lg sm:text-xl">Share & Win</h3>
            <p className="text-sm sm:text-base text-gray-600 leading-relaxed">
              Download and share your design to participate in contest
            </p>
          </div>
        </div>
        <div className="mt-8 text-center">
          <div className="inline-flex items-center space-x-2 bg-white px-4 py-2 rounded-full shadow-sm">
            <span className="text-sm text-gray-600">Powered by</span>
            <span className="font-bold text-red-600">JK Lakshmi Cement</span>
          </div>
        </div>
      </div> */}

      {/* Terms and Conditions Modal */}
      {showTermsModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg max-w-lg w-full max-h-96 overflow-y-auto">
            <div className="p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-gray-900">
                  Terms and Conditions
                </h3>
                <button
                  onClick={() => setShowTermsModal(false)}
                  className="text-gray-400 hover:text-gray-600 text-xl"
                >
                  √ó
                </button>
              </div>
              
              <div className="text-sm text-gray-700 space-y-3">
                <p>
                  <strong>1. Contest Participation:</strong> By submitting your details and photos, you agree to participate in the JK Lakshmi SKY Digital Branding Contest.
                </p>
                <p>
                  <strong>2. Photo Usage:</strong> JK Lakshmi Cement reserves the right to use submitted photos and generated designs for promotional purposes.
                </p>
                <p>
                  <strong>3. Accuracy of Information:</strong> All provided information must be accurate and truthful. False information may result in disqualification.
                </p>
                <p>
                  <strong>4. Eligibility:</strong> Contest is open to authorized JK Lakshmi dealers and distributors with valid SAP codes.
                </p>
                <p>
                  <strong>5. Privacy:</strong> Your personal information will be used solely for contest purposes and will not be shared with third parties.
                </p>
                <p>
                  <strong>6. Prize Distribution:</strong> Winners will be contacted using the provided mobile number and dealership information.
                </p>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default UploadPage