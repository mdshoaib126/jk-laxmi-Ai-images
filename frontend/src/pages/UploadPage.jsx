import React, { useState, useContext } from 'react'
import { useNavigate } from 'react-router-dom'
import axios from 'axios'
import { UserContext } from '../App'
import ImageUploader from '../components/ImageUploader'

const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'https://jk-lakshmi-api.expm.in'

const UploadPage = () => {
  const { user, updateUser } = useContext(UserContext)
  const navigate = useNavigate()
  const [uploading, setUploading] = useState(false)
  const [showUserForm, setShowUserForm] = useState(false)
  const [userInfo, setUserInfo] = useState({
    dealershipName: user?.dealershipName || '',
    sapCode: user?.sapCode || '',
    mobileNumber: user?.mobileNumber || ''
  })

  const handleUpload = async (formData) => {
    if (!user?.id) {
      alert('User session not found. Please refresh the page.')
      return
    }

    try {
      setUploading(true)

      // Add user info to form data if available
      if (userInfo.dealershipName || userInfo.sapCode || userInfo.mobileNumber) {
        formData.append('userInfo', JSON.stringify(userInfo))
      }

      const response = await axios.post(`${API_BASE_URL}/api/upload`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      })

      if (response.data.success) {
        // Update user with upload info
        const uploadData = response.data.data
        updateUser({
          ...userInfo,
          uploads: [...(user.uploads || []), uploadData]
        })

        // Navigate to preview page
        navigate(`/preview/${uploadData.uploadId}`)
      } else {
        throw new Error(response.data.message || 'Upload failed')
      }
    } catch (error) {
      console.error('Upload error:', error)
      const errorMessage = error.response?.data?.message || error.message || 'Upload failed'
      alert(`Upload failed: ${errorMessage}`)
    } finally {
      setUploading(false)
    }
  }

  const handleUserInfoSubmit = (e) => {
    e.preventDefault()
    
    // Validate SAP Code
    if (userInfo.sapCode.length !== 10 || !/^\d{10}$/.test(userInfo.sapCode)) {
      alert('SAP CODE must be exactly 10 digits')
      return
    }
    
    updateUser(userInfo)
    setShowUserForm(false)
  }

  const handleUserInfoChange = (field, value) => {
    setUserInfo(prev => ({
      ...prev,
      [field]: value
    }))
  }

  return (
    <div className="max-w-4xl mx-auto space-y-8">
      {/* Welcome Section */}
      <div className="text-center">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          Transform Your Shopfront with AI
        </h1>
        <p className="text-xl text-gray-600 mb-6">
          Upload a photo of your shop and see how it could look with 
          JK Lakshmi Cement's premium facade designs
        </p>
        
        {/* Features Grid */}
        <div className="grid md:grid-cols-2 gap-6 mb-8">
          <div className="card p-6 text-center">
            <div className="text-4xl mb-3">ü§ñ</div>
            <h3 className="font-semibold text-gray-900 mb-2">AI-Powered Designs</h3>
            <p className="text-sm text-gray-600">
              Get 4 unique facade designs generated by advanced AI
            </p>
          </div>
          <div className="card p-6 text-center">
            <div className="text-4xl mb-3">üèÜ</div>
            <h3 className="font-semibold text-gray-900 mb-2">Contest Entry</h3>
            <p className="text-sm text-gray-600">
              Share your design and participate in rewards
            </p>
          </div>
        </div>
      </div>

      {/* User Info Section */}
      {!user?.dealershipName && !showUserForm && (
        <div className="card p-6 bg-blue-50 border-blue-200">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="font-semibold text-blue-900 mb-1">
                üìù Complete Your Profile
              </h3>
              <p className="text-sm text-blue-700">
                Add your details to participate in the contest and get personalized designs
              </p>
            </div>
            <button
              onClick={() => setShowUserForm(true)}
              className="btn-primary"
            >
              Add Details
            </button>
          </div>
        </div>
      )}

      {/* User Form */}
      {showUserForm && (
        <div className="card p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">
            Your Information
          </h3>
          <form onSubmit={handleUserInfoSubmit} className="space-y-4">
            <div>
              <label className="form-label">
                Dealership Name *
              </label>
              <input
                type="text"
                value={userInfo.dealershipName}
                onChange={(e) => handleUserInfoChange('dealershipName', e.target.value)}
                className="form-input"
                placeholder="Enter your dealership name"
                required
              />
            </div>
            <div className="grid md:grid-cols-2 gap-4">
              <div>
                <label className="form-label">
                  SAP CODE *
                </label>
                <input
                  type="text"
                  value={userInfo.sapCode}
                  onChange={(e) => {
                    const value = e.target.value.replace(/\D/g, '').slice(0, 10)
                    handleUserInfoChange('sapCode', value)
                  }}
                  className="form-input"
                  placeholder="Enter 10-digit SAP code"
                  pattern="\d{10}"
                  maxLength="10"
                  required
                />
                <p className="text-xs text-gray-500 mt-1">
                  Must be exactly 10 digits
                </p>
              </div>
              <div>
                <label className="form-label">
                  Mobile Number *
                </label>
                <input
                  type="tel"
                  value={userInfo.mobileNumber}
                  onChange={(e) => handleUserInfoChange('mobileNumber', e.target.value)}
                  className="form-input"
                  placeholder="+91 9876543210"
                  required
                />
              </div>
            </div>
            <div className="flex space-x-4">
              <button type="submit" className="btn-primary">
                Save Information
              </button>
              <button
                type="button"
                onClick={() => setShowUserForm(false)}
                className="btn-secondary"
              >
                Skip for Now
              </button>
            </div>
          </form>
        </div>
      )}

      {/* Image Uploader */}
      <ImageUploader
        onUpload={handleUpload}
        loading={uploading}
        userId={user?.id}
      />

      {/* Recent Uploads */}
      {user?.uploads && user.uploads.length > 0 && (
        <div className="card p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">
            Your Recent Uploads
          </h3>
          <div className="grid md:grid-cols-3 gap-4">
            {user.uploads.slice(-3).map((upload) => (
              <div
                key={upload.uploadId}
                className="relative group cursor-pointer"
                onClick={() => navigate(`/preview/${upload.uploadId}`)}
              >
                <img
                  src={`${API_BASE_URL}${upload.filePath}`}
                  alt={upload.originalName}
                  className="w-full h-32 object-cover rounded-lg"
                />
                <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all rounded-lg flex items-center justify-center">
                  <span className="text-white opacity-0 group-hover:opacity-100 font-medium">
                    View Designs
                  </span>
                </div>
                <div className="absolute bottom-2 left-2 bg-white px-2 py-1 rounded text-xs">
                  {new Date(upload.uploadedAt).toLocaleDateString()}
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* How It Works */}
      <div className="card p-4 sm:p-6 lg:p-8 bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 border-red-200">
        <div className="text-center mb-6">
          <h2 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
            How It Works
          </h2>
          <p className="text-gray-600 text-sm sm:text-base">
            Transform your shopfront in 3 simple steps
          </p>
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-6 sm:gap-8">
          <div className="text-center group">
            <div className="relative mb-4">
              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-full flex items-center justify-center text-xl sm:text-2xl font-bold mx-auto shadow-lg transform group-hover:scale-105 transition-transform">
                üì∏
              </div>
              <div className="absolute -top-2 -right-2 w-8 h-8 bg-orange-400 text-white rounded-full flex items-center justify-center text-sm font-bold">
                1
              </div>
            </div>
            <h3 className="font-bold text-gray-900 mb-2 text-lg sm:text-xl">Upload Photo</h3>
            <p className="text-sm sm:text-base text-gray-600 leading-relaxed">
              Take or upload a clear photo of your shopfront
            </p>
          </div>
          <div className="text-center group">
            <div className="relative mb-4">
              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-full flex items-center justify-center text-xl sm:text-2xl font-bold mx-auto shadow-lg transform group-hover:scale-105 transition-transform">
                ü§ñ
              </div>
              <div className="absolute -top-2 -right-2 w-8 h-8 bg-orange-400 text-white rounded-full flex items-center justify-center text-sm font-bold">
                2
              </div>
            </div>
            <h3 className="font-bold text-gray-900 mb-2 text-lg sm:text-xl">AI Generation</h3>
            <p className="text-sm sm:text-base text-gray-600 leading-relaxed">
              Our AI creates 4 unique facade designs for you
            </p>
          </div>
          <div className="text-center group">
            <div className="relative mb-4">
              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-full flex items-center justify-center text-xl sm:text-2xl font-bold mx-auto shadow-lg transform group-hover:scale-105 transition-transform">
                üéâ
              </div>
              <div className="absolute -top-2 -right-2 w-8 h-8 bg-orange-400 text-white rounded-full flex items-center justify-center text-sm font-bold">
                3
              </div>
            </div>
            <h3 className="font-bold text-gray-900 mb-2 text-lg sm:text-xl">Share & Win</h3>
            <p className="text-sm sm:text-base text-gray-600 leading-relaxed">
              Download and share your design to participate in contest
            </p>
          </div>
        </div>
        <div className="mt-8 text-center">
          <div className="inline-flex items-center space-x-2 bg-white px-4 py-2 rounded-full shadow-sm">
            <span className="text-sm text-gray-600">Powered by</span>
            <span className="font-bold text-red-600">JK Lakshmi Cement</span>
          </div>
        </div>
      </div>

      {/* Terms and Privacy */}
      <div className="text-center text-sm text-gray-500">
        <p>
          By uploading your photo, you agree to our{' '}
          <a href="#" className="text-red-600 hover:underline">Terms of Service</a>
          {' '}and{' '}
          <a href="#" className="text-red-600 hover:underline">Privacy Policy</a>
        </p>
      </div>
    </div>
  )
}

export default UploadPage